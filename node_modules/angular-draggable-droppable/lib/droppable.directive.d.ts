import { OnInit, ElementRef, OnDestroy, EventEmitter, NgZone, Renderer2 } from '@angular/core';
import { Subscription } from 'rxjs';
import { DraggableHelper } from './draggable-helper.provider';
import { DraggableScrollContainerDirective } from './draggable-scroll-container.directive';
import * as ɵngcc0 from '@angular/core';
export interface DropEvent<T = any> {
    dropData: T;
}
export interface ValidateDropParams {
    /**
     * ClientX value of the mouse location where the drop occurred
     */
    clientX: number;
    /**
     * ClientY value of the mouse location where the drop occurred
     */
    clientY: number;
    /**
     * The target of the event where the drop occurred
     */
    target: EventTarget;
}
export declare type ValidateDrop = (params: ValidateDropParams) => boolean;
export declare class DroppableDirective implements OnInit, OnDestroy {
    private element;
    private draggableHelper;
    private zone;
    private renderer;
    private scrollContainer;
    /**
     * Added to the element when an element is dragged over it
     */
    dragOverClass: string;
    /**
     * Added to the element any time a draggable element is being dragged
     */
    dragActiveClass: string;
    /**
     * Allow custom behaviour to control when the element is dropped
     */
    validateDrop: ValidateDrop;
    /**
     * Called when a draggable element starts overlapping the element
     */
    dragEnter: EventEmitter<DropEvent<any>>;
    /**
     * Called when a draggable element stops overlapping the element
     */
    dragLeave: EventEmitter<DropEvent<any>>;
    /**
     * Called when a draggable element is moved over the element
     */
    dragOver: EventEmitter<DropEvent<any>>;
    /**
     * Called when a draggable element is dropped on this element
     */
    drop: EventEmitter<DropEvent<any>>;
    currentDragSubscription: Subscription;
    constructor(element: ElementRef<HTMLElement>, draggableHelper: DraggableHelper, zone: NgZone, renderer: Renderer2, scrollContainer: DraggableScrollContainerDirective);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DroppableDirective, [null, null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DroppableDirective, "[mwlDroppable]", never, { "dragOverClass": "dragOverClass"; "dragActiveClass": "dragActiveClass"; "validateDrop": "validateDrop"; }, { "dragEnter": "dragEnter"; "dragLeave": "dragLeave"; "dragOver": "dragOver"; "drop": "drop"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcHBhYmxlLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJkcm9wcGFibGUuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBEcmFnZ2FibGVIZWxwZXIgfSBmcm9tICcuL2RyYWdnYWJsZS1oZWxwZXIucHJvdmlkZXInO1xuaW1wb3J0IHsgRHJhZ2dhYmxlU2Nyb2xsQ29udGFpbmVyRGlyZWN0aXZlIH0gZnJvbSAnLi9kcmFnZ2FibGUtc2Nyb2xsLWNvbnRhaW5lci5kaXJlY3RpdmUnO1xuZXhwb3J0IGludGVyZmFjZSBEcm9wRXZlbnQ8VCA9IGFueT4ge1xuICAgIGRyb3BEYXRhOiBUO1xufVxuZXhwb3J0IGludGVyZmFjZSBWYWxpZGF0ZURyb3BQYXJhbXMge1xuICAgIC8qKlxuICAgICAqIENsaWVudFggdmFsdWUgb2YgdGhlIG1vdXNlIGxvY2F0aW9uIHdoZXJlIHRoZSBkcm9wIG9jY3VycmVkXG4gICAgICovXG4gICAgY2xpZW50WDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIENsaWVudFkgdmFsdWUgb2YgdGhlIG1vdXNlIGxvY2F0aW9uIHdoZXJlIHRoZSBkcm9wIG9jY3VycmVkXG4gICAgICovXG4gICAgY2xpZW50WTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFRoZSB0YXJnZXQgb2YgdGhlIGV2ZW50IHdoZXJlIHRoZSBkcm9wIG9jY3VycmVkXG4gICAgICovXG4gICAgdGFyZ2V0OiBFdmVudFRhcmdldDtcbn1cbmV4cG9ydCBkZWNsYXJlIHR5cGUgVmFsaWRhdGVEcm9wID0gKHBhcmFtczogVmFsaWRhdGVEcm9wUGFyYW1zKSA9PiBib29sZWFuO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHJvcHBhYmxlRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIGRyYWdnYWJsZUhlbHBlcjtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIHNjcm9sbENvbnRhaW5lcjtcbiAgICAvKipcbiAgICAgKiBBZGRlZCB0byB0aGUgZWxlbWVudCB3aGVuIGFuIGVsZW1lbnQgaXMgZHJhZ2dlZCBvdmVyIGl0XG4gICAgICovXG4gICAgZHJhZ092ZXJDbGFzczogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEFkZGVkIHRvIHRoZSBlbGVtZW50IGFueSB0aW1lIGEgZHJhZ2dhYmxlIGVsZW1lbnQgaXMgYmVpbmcgZHJhZ2dlZFxuICAgICAqL1xuICAgIGRyYWdBY3RpdmVDbGFzczogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEFsbG93IGN1c3RvbSBiZWhhdmlvdXIgdG8gY29udHJvbCB3aGVuIHRoZSBlbGVtZW50IGlzIGRyb3BwZWRcbiAgICAgKi9cbiAgICB2YWxpZGF0ZURyb3A6IFZhbGlkYXRlRHJvcDtcbiAgICAvKipcbiAgICAgKiBDYWxsZWQgd2hlbiBhIGRyYWdnYWJsZSBlbGVtZW50IHN0YXJ0cyBvdmVybGFwcGluZyB0aGUgZWxlbWVudFxuICAgICAqL1xuICAgIGRyYWdFbnRlcjogRXZlbnRFbWl0dGVyPERyb3BFdmVudDxhbnk+PjtcbiAgICAvKipcbiAgICAgKiBDYWxsZWQgd2hlbiBhIGRyYWdnYWJsZSBlbGVtZW50IHN0b3BzIG92ZXJsYXBwaW5nIHRoZSBlbGVtZW50XG4gICAgICovXG4gICAgZHJhZ0xlYXZlOiBFdmVudEVtaXR0ZXI8RHJvcEV2ZW50PGFueT4+O1xuICAgIC8qKlxuICAgICAqIENhbGxlZCB3aGVuIGEgZHJhZ2dhYmxlIGVsZW1lbnQgaXMgbW92ZWQgb3ZlciB0aGUgZWxlbWVudFxuICAgICAqL1xuICAgIGRyYWdPdmVyOiBFdmVudEVtaXR0ZXI8RHJvcEV2ZW50PGFueT4+O1xuICAgIC8qKlxuICAgICAqIENhbGxlZCB3aGVuIGEgZHJhZ2dhYmxlIGVsZW1lbnQgaXMgZHJvcHBlZCBvbiB0aGlzIGVsZW1lbnRcbiAgICAgKi9cbiAgICBkcm9wOiBFdmVudEVtaXR0ZXI8RHJvcEV2ZW50PGFueT4+O1xuICAgIGN1cnJlbnREcmFnU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sIGRyYWdnYWJsZUhlbHBlcjogRHJhZ2dhYmxlSGVscGVyLCB6b25lOiBOZ1pvbmUsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHNjcm9sbENvbnRhaW5lcjogRHJhZ2dhYmxlU2Nyb2xsQ29udGFpbmVyRGlyZWN0aXZlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=